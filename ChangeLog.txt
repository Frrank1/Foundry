This file contains the change log for the Cognitive Foundry.

Changes since last release:

Release 3.1.1 (2011-03-23):
 * All projects now depend on JUnit 4.8.2 instead of 3.8.2 or 4.6.
 * Upgraded to XStream to 1.3.1 (and its dependency xpp3_min to 1.1.4c).
 * Common Core:
   * KDTree: Fixed two bugs that caused the KDTree to not always return the
     nearest points in rare cases.
 * Learning Core:
   * PartitionalClusterer: Added an implementation of a partitional clustering
     algorithm.
   * IncrementalClusterCreator: New interface for a cluster creator that can
     incrementally update clusters. DefaultIncrementalClusterCreator is a
     default implementation of the interface that just updates the cluster
     memberships.
   * VectorMeanCentroidClusterCreator: Modified to implement the new
     IncrementalClusterCreator interface.
   * BinaryBaggingLearner: Generalized generics in constructor.
   * OnlineBaggingCategorizerLearner: Added an implementation of an online
     version of the bagging algorithm for building ensembles.
   * VotingCategorizerEnsemble: Added an unweighted voting categorization
     ensemble as a counterpart to WeightedVotingCategorizerEnsemble.
   * OnlinePassiveAggressivePerceptron: Added an implementation of the
     Passive-Aggressive algorithm for binary classification. Also contains
     PA-I (LinearSoftMargin) and PA-II (QuadraticSoftMargin) variants.

Release 3.1.0 (2011-02-23):

 * Text: New package in this release for doing statistical text analysis and
   information retrieval. Especially useful for doing machine learning over
   text data.
 * Common Core:
   * CollectionUtil: Added toStringDelimited method.
   * VectorFactoryContainer is now an interface, existing implementation moved
     to DefaultVectorFactoryContainer.
   * ObjectUtil: Added getBytes method.
 * Learning Core:
   * OnlineLearner interface renamed to IncrementalLearner, which is a more
     appropriate name. Other similar classes also renamed:
     AbstractBatchAndIncrementalLearner
   * Added BatchLearnerContainer interface and renamed
     AbstractBatchLearnerWrapper to AbstractBatchLearnerContainer
   * Added DiscriminantCategorizer and BinaryDiscriminantCategorizer interfaces.
     Almost all Categorizers now implement one of these interfaces; some
     existing methods were renamed to match these standard interfaces.
   * Added DistanceSamplingClusterInitializer, which is an implementation of
     the k-means++ initialization algorithm.
   * HiddenMarkovModel and BaumWelchAlgorithm had some performance improvements.
   * Added KernelPrincipalComponentsAnalysis, which is an implementation of
     kernel PCA using eigen-decomposition.
   * DatasetUtil: Added countOutputValues.
   * TargetEstimatePair and WeightedTargetEstimatePair are now interfaces;
     existing implementations moved to DefaultTargetEstimatePair and
     DefaultWeightedTargetEstimatePair.
   * ConstantEvaluator: Now extends AbstractCloneableSerializable.
   * ThresholdBinaryCategorizer is now an interface. Existing implementation
     moved to ScalarThresholdBinaryCategorizer.
   * AbstractThresholdBinaryCategorizer now longer contains the threshold
     directly, instead it assumes the threshold is applied in evaluateAsDouble
     and categorizes based on zero. This is to remove the confusion of having
     both a bias and a threshold in some classes and to clarify the meaning of
     evaluateAsDouble so that it matches the new BinaryDiscriminantCategorizer
     interface.
   * DataHistogram: Added isEmpty method and implemented in
     AbstractDataHistogram.
   * Made new ConfusionMatrix and BinaryConfusionMatrix interfaces and put them
     in the gov.sandia.cognition.learning.performance.categorization. Refactored
     existing confusion matrix code to implement these interfaces; the existing
     class ending up in DefaultBinaryConfusionMatrix. New confusion matrix
     interface uses generics to be useful for more than just binary
     categorization.
   * Now uses JUnit 4.6 for tests.

Release 3.0.3 (2010-12-22):
* Common Core:
  * UnivariateStatisticsUtil: Weighted computations handle negative weights by
    using absolute values to fix bug.

Release 3.0.2 (2010-12-15):
* Common Core:
  * ValueMapper: Added create() method.
  * UnivariateStatisticsUtil: Addressed numerical instability in one-pass
    variance calculations.
  * DefaultNamedValue: Added create() methods.
  * Added ArgumentChecker utility class.
  * Added KeyValuePair interface and DefaultKeyValuePair implementation.
* Learning Core:
  * AdaBoost: Generalized generics.
  * BaggingCategorizerLearner: Will create a new Random if null.
  * WeightedBinaryEnsemble: Added generic for the member type.
  * IVotingCategorizerLearner: Performance improvements, added vote histogram
    factory.
  * HiddenMarkovModel: Made computeObservationsLikelihoods public.
  * ParallelHiddenMarkovModel: Added copy constructor.
  * Added online perceptron and voted perceptron implementations.
  * Added primal estimated sub-gradient SVM learner.
  * AbstractDecisionTreeLearner: Performance tweaks.
  * AbstractDecisionTreeNode: Added parent field.
  * AbstractVectorThresholdMaximumGainLearner: Fixed corner-case bug.
  * CategorizationTreeLearner: Added maximum depth parameter and cleaned up
    implementation.
  * CategorizationTreeNode: Support of parent field.
  * DecisionTreeNode: Added getParent(), getDepth(), and getTreeSize() methods.
  * RegressionTreeLearner: Added maximum depth parameter.
  * RegressionTreeNode: Support of parent field.
  * DatasetUtil: Added splitOnOutput method.
  * ConstantEvaluator: Added create method.
  * LinearBinaryCategorizer: Now allows null weight vector (evaluates to 0.0).
  * VectorElementThresholdCategorizer: Added toString().
  * AbstractDataHistogram: Now contains default implementations of getFraction()
    and addAll().
  * DataHistogram: Minor refactoring to be more consistent with other
    statistics distributions. In particular, getDomain() is to be used instead
    of getValues(), which was removed. Moved many of the methods that were in
    the implementation class into the interface.
  * DiscreteSamplingUtil: New utility class for sampling discrete objects.
  * ScalarSummaryStatistics: Bug fix.
  * MapBasedDataHistogram: Reworked with changes to DataHistogram. New PMF,
    learner, and factory implementations.
  * UnivariateGaussian: Learner classes generic updated to be a
    UnivariateGaussian.PDF, which it was already returning.
  * Added YuleSimonDistribution distribution class.
  * KolmogorovSmirnovConfidence: Fixed infinite loop with given NaNs.

Release 3.0.1 (2010-10-15):
* Common Core:
  * Added ArrayUtil class.
  * MultivariateStatisticsUtil: computeMean changed to accept Iterable instead
    of Collection.
  * Permutation: Added reorder method.
* Learning Core:
  * DirichletProcessClustering: Performance improvements.
  * Cluster: Made CloneableSerializable.
  * DefaultCluster: Now extends AbstractCloneableSerializable.
  * AbstractClusterHierarchyNode:: Now extends AbstractCloneableSerializable.
  * gov.sandia.cognition.learning.function.cost: Added AbstractCostFunction,
    KolmogorovSmirnocDivergence, NegativeLogLikelihood, and
    ParallelNegativeLogLikelihood.
  * SequantialMinimalOptimization: Added an initial implementatio of the
    algorithm.
  * WeightedEuclideanDistance: Added a weighted Euclidean distance metric.
  * Added EstimableDistribution interface.
  * AbstractMarkovChainMonteCarlo: Now keeps track of previous parameter.
  * DirichletProcessMixtureModel: Performance improvements.
  * ParallelDirichletProcessMixtureModel: Performance improvements.
  * MultivariateGaussianMeanBayesianEstimator: Update now optimized for case of
    a list instead of a single update.
  * MultivariateGaussianMeanCovarianceBayesianEstimator: Optimizations for case
    of providing a list of data.
  * BetaBinomialDistribution: Now implements EstimableDistribution.
  * BetaDistribution: Now implements EstimableDistribution.
  * ChineseRestaurantProcess: Now keeps track of total customers.
  * ExponentialDistribution: Now implements EstimableDistribution.
  * GammaDistribution: Now implements EstimableDistribution.
  * GeometricDistribution: Now implements EstimableDistribution.
  * LaplaceDistribution: Now implements EstimableDistribution.
  * MultinomialDistribution: Added logSize method.
  * MultivariateGaussian: Now implements EstimableDistribution.
  * NegativeBinomialDistribution: Now implements EstimableDistribution.
  * NormalInverseWishartDistribution: Now implements EstimableDistribution.
  * PoissonDistribution: Now implements EstimableDistribution.
  * ScalarDataDistribution: getDomain now returns in sorted order.
  * StudentTDistribution: Now implements EstimableDistribution.
  * UniformDistribution: Now implements EstimableDistribution.
  * UnivariateGaussian: Now implements EstimableDistribution.
  * ConfidenceIntervalEvaluator: Added computeConfidenceInterval method that
    takes a mean, variance, number of samples, and confidence. All existing
    ConfidenceIntervalEvaluators updated; which mostly meant changing static
    methods to be member methods and adding INSTANCE variables for those without
    parameters.
  * ChebyshevInequality: Now extends AbstractCloneableSerializable.

Release 3.0.0 (2010-06-25):
First open source release.
